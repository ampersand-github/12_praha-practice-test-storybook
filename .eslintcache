[{"/Users/dev/my/app/Practice/praha_practice_test/12_praha-practice-test-storybook/src/index.js":"1","/Users/dev/my/app/Practice/praha_practice_test/12_praha-practice-test-storybook/src/components/Game.jsx":"2","/Users/dev/my/app/Practice/praha_practice_test/12_praha-practice-test-storybook/src/components/game.jsx":"3","/Users/dev/my/app/Practice/praha_practice_test/12_praha-practice-test-storybook/src/components/board.jsx":"4","/Users/dev/my/app/Practice/praha_practice_test/12_praha-practice-test-storybook/src/functions/squares.js":"5","/Users/dev/my/app/Practice/praha_practice_test/12_praha-practice-test-storybook/src/functions/calculateWinner.js":"6"},{"size":163,"mtime":1611636188533,"results":"7","hashOfConfig":"8"},{"size":2217,"mtime":1611632928178,"results":"9","hashOfConfig":"8"},{"size":2310,"mtime":1611633197769,"results":"10","hashOfConfig":"8"},{"size":986,"mtime":1611633100595,"results":"11","hashOfConfig":"8"},{"size":158,"mtime":1611633100603,"results":"12","hashOfConfig":"8"},{"size":452,"mtime":1611633100601,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sku24q",{"filePath":"16","messages":"17","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/Users/dev/my/app/Practice/praha_practice_test/12_praha-practice-test-storybook/src/index.js",[],"/Users/dev/my/app/Practice/praha_practice_test/12_praha-practice-test-storybook/src/components/Game.jsx",["28","29","30"],"import React from \"react\";\n\nexport class Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [\n                {\n                    squares: Array(9).fill(null)\n                }\n            ],\n            stepNumber: 0,\n            xIsNext: true\n        };\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n        this.setState({\n            history: history.concat([\n                {\n                    squares: squares\n                }\n            ]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext\n        });\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0\n        });\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n\n        const moves = history.map((step, move) => {\n            const desc = move ?\n                'Go to move #' + move :\n                'Go to game start';\n            return (\n                <li key={move}>\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\n                </li>\n            );\n        });\n\n        let status;\n        if (winner) {\n            status = \"Winner: \" + winner;\n        } else {\n            status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n        }\n\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board\n                        squares={current.squares}\n                        onClick={i => this.handleClick(i)}\n                    />\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n","/Users/dev/my/app/Practice/praha_practice_test/12_praha-practice-test-storybook/src/components/game.jsx",[],["31","32"],"/Users/dev/my/app/Practice/praha_practice_test/12_praha-practice-test-storybook/src/components/board.jsx",[],"/Users/dev/my/app/Practice/praha_practice_test/12_praha-practice-test-storybook/src/functions/squares.js",[],"/Users/dev/my/app/Practice/praha_practice_test/12_praha-practice-test-storybook/src/functions/calculateWinner.js",[],{"ruleId":"33","severity":2,"message":"34","line":21,"column":13,"nodeType":"35","messageId":"36","endLine":21,"endColumn":28},{"ruleId":"33","severity":2,"message":"34","line":46,"column":24,"nodeType":"35","messageId":"36","endLine":46,"endColumn":39},{"ruleId":"37","severity":2,"message":"38","line":69,"column":22,"nodeType":"39","endLine":69,"endColumn":27},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},"no-undef","'calculateWinner' is not defined.","Identifier","undef","react/jsx-no-undef","'Board' is not defined.","JSXIdentifier","no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-global-assign","no-unsafe-negation"]